"Mutation root"
type Mutation {
  products: ProductsMutation
  users: UsersMutation
}

type Product {
  description: String!
  name: String!
}

type ProductsMutation {
  add(product: ProductInput!): Product!
}

type ProductsQuery {
  all: [Product!]!
  get(id: Int!): Product!
}

"Query root"
type Query {
  products: ProductsQuery
  users: UsersQuery
}

type User {
  age: Int!
  "ISO-8601"
  born: Date!
  name: String!
}

type UsersMutation {
  add(user: UserInput!): User!
}

type UsersQuery {
  all: [User!]!
  get(id: Int!): User!
}

"Scalar for BigDecimal"
scalar BigDecimal

"Scalar for BigInteger"
scalar BigInteger

"Scalar for Date"
scalar Date

input ProductInput {
  description: String!
  name: String!
}

input UserInput {
  "ISO-8601"
  born: Date!
  name: String!
}
